plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sparta.tl3p'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('querydslVersion', "5.0.0")  // QueryDSL 버전 명시적으로 설정
}

dependencies {

	// Logstash
	implementation 'net.logstash.logback:logstash-logback-encoder:7.3'

	// SpringDoc OpenAPI (Swagger)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

	// H2 Database
	testImplementation 'com.h2database:h2:2.2.224'

	// JUnit 5 (Jupiter)
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

	// Mockito
	testImplementation 'org.mockito:mockito-core:4.8.1'
	testImplementation 'org.mockito:mockito-junit-jupiter:4.8.1'

	// AssertJ
	testImplementation 'org.assertj:assertj-core:3.23.1'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5' //jjwt
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5' //jjwt
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' //jjwt

    implementation 'org.springframework.boot:spring-boot-starter-data-redis' // Redis 사용

	implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Security 추가

	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'  // Jakarta Validation API 추가
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'  // Hibernate Validator 추가
	implementation 'org.glassfish:jakarta.el:4.0.2'  // EL (Expression Language) 추가

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs.add("-parameters")
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslSrcDir = 'src/main/generated'

clean {
	delete file(querydslSrcDir)
}
